#!/bin/bash
#COBALT -n 2
#COBALT -t 30
#COBALT --mode script
#COBALT -A radix-io
#COBALT -q ibleaf3-debug

# This job tests bake performance on top of a kove volume, alternatively with either
# pmdk or the file backend to bake.  Note that it is hard coded to use a specific
# xpd and volume; this job assumes it has exclusive access.

# note: disable registration cache for verbs provider for now; see
#       discussion in https://github.com/ofiwg/libfabric/issues/5244
export FI_MR_CACHE_MAX_COUNT=0
export HOME=$SANDBOX
export KDSA_MPIO_MAX_CONN=1
export PMDK_PATH="/xmem/xpdha"

. $SANDBOX/spack/share/spack/setup-env.sh
BAKE_STABLE_VER=`spack find mochi-bake |grep mochi-bake |grep -v file-backend`
spack load -r mochi-ssg
spack load -r $BAKE_STABLE_VER
spack load -r mvapich2

spack find --loaded

echo "### NOTE: all results in this output are using Kove XPD volumes"
echo "### NOTE: ALL BAKE RESULTS BELOW are using 2nd socket on cooley nodes: cores 6-11, also using numactl to constrain memory allocations"

kdsa_manage connect mlx5_0.1/260535867639876.8:124391e4-a843-4cc8-ab28-39a93c7cc9e8 xpdha

echo "### verbs kove pmdk no threads"
sleep 1
dd if=/dev/zero of=$PMDK_PATH bs=100M count=1 conv=notrunc
bake-mkpool $PMDK_PATH
mpirun -f $COBALT_NODEFILE -n 2 numactl -N 1 -m 1 ./bake-p2p-bw -x 16777216 -m 34359738368 -n "verbs://" -p $PMDK_PATH -c 12

kdsa_manage disconnect xpdha
kdsa_manage connect mlx5_0.1/260535867639876.8:124391e4-a843-4cc8-ab28-39a93c7cc9e8 xpdha

echo "### verbs kove pmdk 4 rpc threads"
sleep 1
dd if=/dev/zero of=$PMDK_PATH bs=100M count=1 conv=notrunc
bake-mkpool $PMDK_PATH
mpirun -f $COBALT_NODEFILE -n 2 numactl -N 1 -m 1 ./bake-p2p-bw -x 16777216 -m 34359738368 -n "verbs://" -p $PMDK_PATH -c 12 -r 4

kdsa_manage disconnect xpdha
kdsa_manage connect mlx5_0.1/260535867639876.8:124391e4-a843-4cc8-ab28-39a93c7cc9e8 xpdha

echo "### verbs kove pmdk no threads, pipelined"
sleep 1
dd if=/dev/zero of=$PMDK_PATH bs=100M count=1 conv=notrunc
bake-mkpool $PMDK_PATH
mpirun -f $COBALT_NODEFILE -n 2 numactl -N 1 -m 1 ./bake-p2p-bw -x 16777216 -m 34359738368 -n "verbs://" -p $PMDK_PATH -c 12 -i

kdsa_manage disconnect xpdha
kdsa_manage connect mlx5_0.1/260535867639876.8:124391e4-a843-4cc8-ab28-39a93c7cc9e8 xpdha

echo "### verbs kove pmdk 4 rpc threads, pipelined"
sleep 1
dd if=/dev/zero of=$PMDK_PATH bs=100M count=1 conv=notrunc
bake-mkpool $PMDK_PATH
mpirun -f $COBALT_NODEFILE -n 2 numactl -N 1 -m 1 ./bake-p2p-bw -x 16777216 -m 34359738368 -n "verbs://" -p $PMDK_PATH -c 12 -r 4 -i

kdsa_manage disconnect xpdha
kdsa_manage connect mlx5_0.1/260535867639876.8:124391e4-a843-4cc8-ab28-39a93c7cc9e8 xpdha

# reset to use file backend. Note that we use a different name for the
# benchmark executable as well for the one that was linked against this
# backend and has it's rpath set accordingly.
spack unload $BAKE_STABLE_VER
spack load -r mochi-bake@dev-file-backend

echo "### verbs kove filesystem no threads, pipelined"
sleep 1
dd bs=4M if=/projects/RAN/toonen/mochi-100GiB-xfs.img of=/dev/xpdha oflag=direct
mount /kovefs/xfsa
bake-mkpool /kovefs/xfsa/bake.dat
mpirun -f $COBALT_NODEFILE -n 2 numactl -N 1 -m 1 ./bake-p2p-bw-file -x 16777216 -m 34359738368 -n "verbs://" -p /kovefs/xfsa/bake.dat -c 12 -i
umount /kovefs/xfsa

kdsa_manage disconnect xpdha
kdsa_manage connect mlx5_0.1/260535867639876.8:124391e4-a843-4cc8-ab28-39a93c7cc9e8 xpdha

echo "### verbs kove filesystem 4 rpc threads, pipelined"
sleep 1
dd bs=4M if=/projects/RAN/toonen/mochi-100GiB-xfs.img of=/dev/xpdha oflag=direct
mount /kovefs/xfsa
bake-mkpool /kovefs/xfsa/bake.dat
mpirun -f $COBALT_NODEFILE -n 2 numactl -N 1 -m 1 ./bake-p2p-bw-file -x 16777216 -m 34359738368 -n "verbs://" -p /kovefs/xfsa/bake.dat -c 12 -r 4 -i
umount /kovefs/xfsa

kdsa_manage disconnect xpdha
